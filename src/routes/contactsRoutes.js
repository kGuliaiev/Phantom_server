// –§–∞–π–ª: src/routes/contactsRoutes.js
import express from 'express';
import Contact from '../models/Contact.js';

const router = express.Router();

// üîπ –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–ø–∏—Å–Ω—É—é –∫–Ω–∏–≥—É
router.post('/add', async (req, res) => {
  const { owner, contactId } = req.body;

  if (!owner || !contactId) {
    return res.status(400).json({ message: 'owner –∏ contactId –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
  }

  try {
    const existing = await Contact.findOne({ owner, contactId });
    if (existing) {
      return res.status(409).json({ message: '–ö–æ–Ω—Ç–∞–∫—Ç —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω' });
    }

    const newContact = new Contact({ owner, contactId });
    await newContact.save();
    res.status(201).json({ message: '–ö–æ–Ω—Ç–∞–∫—Ç –¥–æ–±–∞–≤–ª–µ–Ω' });
  } catch (err) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞', error: err.message });
  }
});

// üîπ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
router.get('/:owner', async (req, res) => {
  const { owner } = req.params;
  try {
    const contacts = await Contact.find({ owner });
    res.json(contacts);
  } catch (err) {
    res.status(500).json({ message: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤' });
  }
});

export default router;
